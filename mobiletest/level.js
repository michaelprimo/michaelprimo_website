

let curLevel = 3;
let checkpoint_id = 0;
let levelMap = [];

const TILE_SIZE = 32;
const SPRITE_SIZE = 16;

class Level 
{
  constructor(id_level,map_height,map_width,map_structure,player_spawnX,player_spawnY,checkpoint_list)
  {
    this.id_level = id_level;
    this.map_height = map_height;
    this.map_width = map_width;
    this.map_structure = map_structure;
    this.player_spawnX = player_spawnX;
    this.player_spawnY = player_spawnY;
    this.checkpoint_list = checkpoint_list;
  }
}

let level1 = new Level(0,15,20,[
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,
  1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
  1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,
  1,0,0,0,1,1,0,0,0,0,1,0,0,0,1,
  1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,
  1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,1,1,1,1,1,1,1,1,1,0,0,1,
  1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,
  1,0,1,0,0,0,0,0,0,0,0,0,1,0,1,
  1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,
  1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
],50,450);

let level2 = new Level(1,15,20,[
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,0,0,1,1,1,1,1,0,0,0,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,
  1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,
  1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,
  1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,
  1,2,2,2,2,2,1,0,1,2,2,2,2,2,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
],50,450);

let level3 = new Level(2,15,20,[
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,1,1,1,1,1,2,2,2,2,1,1,0,0,1,
  1,1,2,2,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,
  1,62,0,0,0,0,0,0,0,0,0,0,1,0,1,
  1,0,0,0,0,1,1,2,2,1,1,1,0,0,1,
  1,1,0,0,1,1,1,1,1,1,0,0,0,0,1,
  1,1,0,1,0,0,0,0,0,0,0,0,0,0,1,
  1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,1 ,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,0,0,0,0,61,0,6,6,0,0,0,1,
  1,2,2,2,2,2,1,1,1,2,2,2,2,2,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
],250,250);


let level4 = new Level(3,15,20,[
  1 ,1 ,1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,
  0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,
  0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,
  1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,
  1 ,0 ,0 ,13,13,13,13,13,13,13,13,13,0 ,0 ,1 ,
  1 ,0 ,0 ,13,0 ,0 ,0 ,0 ,0 ,0 ,0 ,13,0 ,0 ,1 ,
  1 ,0 ,0 ,13,0 ,0 ,0 ,0 ,0 ,0 ,0 ,13,0 ,0 ,1 ,
  1 ,0 ,0 ,13,0 ,0 ,0 ,0 ,0 ,0 ,0 ,13,0 ,0 ,1 ,
  1 ,0 ,0 ,13,0 ,0 ,0 ,0 ,0 ,62,0 ,0 ,0 ,0 ,1 ,
  1 ,0 ,0 ,13,0 ,0 ,0 ,1 ,1 ,1 ,1 ,1 ,0 ,0 ,1 ,
  1 ,0 ,0 ,13,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,61,1 ,
  1 ,0 ,0 ,13,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,1 ,
  1 ,0 ,0 ,13,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,0 ,1 ,
  1 ,0 ,0 ,23,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0,0 ,0 ,1 ,
  1 ,0 ,0 ,23,0 ,0 ,0 ,13,0 ,1 ,13,1 ,13,0 ,1 ,
  1 ,0 ,0 ,23,0 ,0 ,1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,
  1 ,1 ,1 ,1 ,1 ,1 ,2 ,2 ,2 ,2 ,2 ,2 ,2 ,2 ,1 ,
  0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,
  0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,
  0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,
],50,450);


let levelEmpty = new Level(999,20,15,[
  1,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
],50,450);

let levelEmpty2 = new Level(999,20,15,[
  0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,
  0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,
  0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,
  1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,
  1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,
  1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,
  1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,
  1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,
  1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,
  1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,
  1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,
  1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,
  1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,
  1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,
  1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,
  1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,
  1 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,1 ,
  0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,
  0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,
  0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,
],50,450);

let levelManager = 
[
  level1,level2,level3, level4
];
ctx.fillStyle='red';
ctx.font = "40px Tahoma";

// MAP EDITOR
function createMap()
{
  for(let column = 0; column < levelManager[curLevel].map_width; column++)
  {
    for(let row = 0; row < levelManager[curLevel].map_height; row++)
    {
      levelMap_create(column, row);
      
    }
  }
}

function levelMap_create(column, row)
{
  let hitboxWidth = 24;
  let hitboxHeight = 24;
  let map_x = (row*TILE_SIZE)+((TILE_SIZE-hitboxWidth)/2);
  let map_y = (column*TILE_SIZE)+((TILE_SIZE-hitboxHeight)/2);

  if(die_roll == 2)
  {
    map_x = ((levelManager[curLevel].map_height*TILE_SIZE)-(TILE_SIZE-hitboxWidth)-hitboxWidth)-(row*TILE_SIZE)+((TILE_SIZE-hitboxWidth)/2);
  }

  let isSolid = true;
  let isVisible = true;
 
  if(levelManager[curLevel].map_structure[(column*levelManager[curLevel].map_height)+row] != 0)
  {
    
    
    levelMap.push(new Platform(map_x,map_y,
    hitboxWidth,hitboxHeight,
    TILE_SIZE,TILE_SIZE,
     isSolid, isVisible, 
     levelManager[curLevel].map_structure[(column*levelManager[curLevel].map_height)+row]));
     
    //console.log("column: " + column + " row: " + row + " x: " + map_x + "" + " y: " + map_y);
      
  }
}

function die_mode_level()
{
  levelMap.length = 0;
  createMap();
}